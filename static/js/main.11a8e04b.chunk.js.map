{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","components/Filter/Filter.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getFilter","state","filter","getAllContacts","contacts","phonebookSelectors","getLoading","loading","getCurrentContacts","createSelector","allContacts","normalizeFilterRequest","toLowerCase","contact","name","includes","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","currentContacts","onSubmit","some","alert","this","className","styles","FormContainer","inputLabel","inputValue","onChange","type","pattern","title","required","Component","connect","dispatch","post","then","data","catch","error","addContact","ContactList","onDeleteContact","map","id","ContactListItem","DeleteBtn","onClick","propTypes","PropTypes","array","isRequired","func","contactId","delete","target","App","fetchContacts","isLoading","get","createReducer","_","payload","combineReducers","store","configureStore","reducer","phonebookReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11a8e04b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__4TvGi\",\"ContactListItem\":\"ContactList_ContactListItem__1Gd3I\",\"DeleteBtn\":\"ContactList_DeleteBtn__24kLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputLabel\":\"Filter_inputLabel__KDsXr\",\"inputValue\":\"Filter_inputValue__23IJH\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = (state) => state.loading;\n\nconst getFilter = (state) => state.filter;\n\nconst getAllContacts = (state) => state.contacts;\n\nconst getCurrentContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizeFilterRequest = filter.toLowerCase();\n\n    return allContacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilterRequest)\n    );\n  }\n);\n\nconst phonebookSelectors = {\n  getLoading,\n  getFilter,\n  getCurrentContacts,\n  getAllContacts,\n};\n\nexport default phonebookSelectors;\n","import { createAction } from \"@reduxjs/toolkit\";\n// import { v4 as uuidv4 } from \"uuid\";\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/Filter\");\n","import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from \"./phonebook-actions\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\nexport const fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch((error) => dispatch(fetchContactError(error)));\n};\n\nexport const addContact = (name, number) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport { addContact, phonebookSelectors } from \"../../redux/phonebook\";\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { currentContacts, onSubmit } = this.props;\n\n    currentContacts.some(\n      (contact) => name.toLowerCase() === contact.name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts.`)\n      : onSubmit(name, number);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.FormContainer}>\n        <label className={styles.inputLabel}>\n          Name\n          <input\n            className={styles.inputValue}\n            value={this.state.name}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.inputLabel}>\n          Number\n          <input\n            className={styles.inputValue}\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentContacts: phonebookSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import styles from \"./ContactList.module.css\";\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.ContactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.ContactListItem} key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={styles.DeleteBtn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/phonebook/phonebook-operations\";\nimport { ContactList } from \"./ContactList\";\nimport { phonebookSelectors } from \"../../redux/phonebook\";\n\nconst mapStateToProps = (state) => ({\n  contacts: phonebookSelectors.getCurrentContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styles from \"./Filter.module.css\";\nimport { phonebookSelectors, changeFilter } from \"../../redux/phonebook\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.inputLabel}>\n    Find contacts by name\n    <input\n      className={styles.inputValue}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    ></input>\n  </label>\n);\n\nconst mapStateToProps = (state) => ({\n  value: phonebookSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","//Components\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { fetchContacts, phonebookSelectors } from \"./redux/phonebook\";\n//Styles\nimport \"./styles.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className=\"Phonebook\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {this.props.isLoading && <h1>Loading...</h1>}\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: phonebookSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from \"../phonebook/phonebook-actions\";\n\nconst contacts = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport logger from \"redux-logger\";\n\nexport const store = configureStore({\n  reducer: phonebookReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// export const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"ContactForm_FormContainer__3JfQi\",\"inputLabel\":\"ContactForm_inputLabel__3ilUb\",\"inputValue\":\"ContactForm_inputValue__wR2AA\"};"],"sourceRoot":""}